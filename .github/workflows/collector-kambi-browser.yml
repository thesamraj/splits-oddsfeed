name: collector-kambi-browser
on:
  push:
    branches: ['**']     # run on ANY branch push
  workflow_dispatch: {}
  release:
    types: [published]
permissions:
  contents: read
  packages: write
env:
  IMAGE: ghcr.io/${{ github.repository }}/collector-kambi-browser
jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Show ref & last commit files
        run: |
          echo "ref=${GITHUB_REF} sha=${GITHUB_SHA}"
          git --no-pager show --name-only --oneline -1
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login GHCR (PAT if present)
        if: ${{ secrets.GHCR_PAT != '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Login GHCR (GITHUB_TOKEN fallback)
        if: ${{ secrets.GHCR_PAT == '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Auth mode used
        run: |
          if [ -n "${{ secrets.GHCR_PAT }}" ]; then echo "auth=PAT"; else echo "auth=GITHUB_TOKEN"; fi

      - name: List build context
        run: |
          ls -al collector-kambi-browser || true
          ls -al collector-kambi-browser/src || true
          test -f collector-kambi-browser/Dockerfile
          test -f collector-kambi-browser/pyproject.toml

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_tag}}

      - name: Build & push (multi-arch)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./collector-kambi-browser
          file: ./collector-kambi-browser/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true

      - name: Inspect manifest (short SHA or digest fallback)
        run: |
          SHORT="${GITHUB_SHA::7}"
          set -x
          docker buildx imagetools inspect "${IMAGE}:sha-${SHORT}" || \
          docker buildx imagetools inspect "${{ steps.build.outputs.digest }}"
